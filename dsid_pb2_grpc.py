# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dsid_pb2 as dsid__pb2


class DSIDStub(object):
  """The service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendsVoidResponse = channel.unary_unary(
        '/dsid.DSID/SendsVoidResponse',
        request_serializer=dsid__pb2.VoidRequest.SerializeToString,
        response_deserializer=dsid__pb2.VoidReply.FromString,
        )
    self.SendsLongResponse = channel.unary_unary(
        '/dsid.DSID/SendsLongResponse',
        request_serializer=dsid__pb2.LongRequest.SerializeToString,
        response_deserializer=dsid__pb2.LongReply.FromString,
        )
    self.SendsBigLongResponse = channel.unary_unary(
        '/dsid.DSID/SendsBigLongResponse',
        request_serializer=dsid__pb2.BigLongRequest.SerializeToString,
        response_deserializer=dsid__pb2.BigLongReply.FromString,
        )
    self.SendsStringResponse = channel.unary_unary(
        '/dsid.DSID/SendsStringResponse',
        request_serializer=dsid__pb2.StringRequest.SerializeToString,
        response_deserializer=dsid__pb2.StringReply.FromString,
        )
    self.SendsObjectResponse = channel.unary_unary(
        '/dsid.DSID/SendsObjectResponse',
        request_serializer=dsid__pb2.ObjectRequest.SerializeToString,
        response_deserializer=dsid__pb2.ObjectReply.FromString,
        )


class DSIDServicer(object):
  """The service definition.
  """

  def SendsVoidResponse(self, request, context):
    """Void
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendsLongResponse(self, request, context):
    """Long
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendsBigLongResponse(self, request, context):
    """8 arguments Long
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendsStringResponse(self, request, context):
    """String
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendsObjectResponse(self, request, context):
    """Object(struct)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DSIDServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendsVoidResponse': grpc.unary_unary_rpc_method_handler(
          servicer.SendsVoidResponse,
          request_deserializer=dsid__pb2.VoidRequest.FromString,
          response_serializer=dsid__pb2.VoidReply.SerializeToString,
      ),
      'SendsLongResponse': grpc.unary_unary_rpc_method_handler(
          servicer.SendsLongResponse,
          request_deserializer=dsid__pb2.LongRequest.FromString,
          response_serializer=dsid__pb2.LongReply.SerializeToString,
      ),
      'SendsBigLongResponse': grpc.unary_unary_rpc_method_handler(
          servicer.SendsBigLongResponse,
          request_deserializer=dsid__pb2.BigLongRequest.FromString,
          response_serializer=dsid__pb2.BigLongReply.SerializeToString,
      ),
      'SendsStringResponse': grpc.unary_unary_rpc_method_handler(
          servicer.SendsStringResponse,
          request_deserializer=dsid__pb2.StringRequest.FromString,
          response_serializer=dsid__pb2.StringReply.SerializeToString,
      ),
      'SendsObjectResponse': grpc.unary_unary_rpc_method_handler(
          servicer.SendsObjectResponse,
          request_deserializer=dsid__pb2.ObjectRequest.FromString,
          response_serializer=dsid__pb2.ObjectReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dsid.DSID', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
